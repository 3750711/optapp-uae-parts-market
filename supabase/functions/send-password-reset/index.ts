
import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));
const supabaseUrl = Deno.env.get("SUPABASE_URL")!;
const supabaseServiceKey = Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!;
const supabase = createClient(supabaseUrl, supabaseServiceKey);

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

interface PasswordResetRequest {
  email: string;
  optId?: string;
}

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    console.log("Password reset request received");
    
    const { email, optId }: PasswordResetRequest = await req.json();
    
    console.log("Processing password reset for:", email, "optId:", optId);

    if (!email) {
      return new Response(
        JSON.stringify({ 
          success: false, 
          message: "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" 
        }),
        {
          status: 400,
          headers: { "Content-Type": "application/json", ...corsHeaders },
        }
      );
    }

    // –°–æ–∑–¥–∞–µ–º –∫–æ–¥ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const { data: codeResult, error: codeError } = await supabase.rpc(
      'create_password_reset_code',
      { 
        p_email: email,
        p_opt_id: optId || null
      }
    );

    if (codeError) {
      console.error("Database error:", codeError);
      return new Response(
        JSON.stringify({ 
          success: false,
          message: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–¥ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è",
          details: codeError.message 
        }),
        {
          status: 500,
          headers: { 
            "Content-Type": "application/json", 
            ...corsHeaders 
          },
        }
      );
    }

    if (!codeResult.success) {
      return new Response(
        JSON.stringify(codeResult),
        {
          status: 429, // Too Many Requests
          headers: { "Content-Type": "application/json", ...corsHeaders },
        }
      );
    }

    const resetCode = codeResult.code;
    console.log("Generated reset code:", resetCode ? "***" : "empty");

    // HTML —à–∞–±–ª–æ–Ω –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è —Å –∫–æ–¥–æ–º
    const subject = "üîê –ö–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è - PartsBay.ae";
    const htmlContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è - PartsBay.ae</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
            .content { background: #ffffff; padding: 30px; border: 1px solid #e5e7eb; }
            .footer { background: #f9fafb; padding: 20px; text-align: center; border-radius: 0 0 10px 10px; border: 1px solid #e5e7eb; border-top: none; }
            .code-box { background: #f0f9ff; border: 2px solid #0ea5e9; padding: 20px; border-radius: 8px; margin: 20px 0; text-align: center; }
            .code { font-size: 32px; font-weight: bold; letter-spacing: 8px; color: #0369a1; font-family: monospace; }
            .warning { background: #fef3c7; border: 1px solid #f59e0b; padding: 15px; border-radius: 8px; margin: 20px 0; }
            .info-box { background: #f0f9ff; border: 1px solid #0ea5e9; padding: 15px; border-radius: 8px; margin: 20px 0; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>üîê –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h1>
            <p>PartsBay.ae - –ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –û–ê–≠</p>
          </div>
          
          <div class="content">
            <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</h2>
            
            <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ PartsBay.ae.</p>
            
            ${optId ? `
            <div class="info-box">
              <strong>–í–∞—à OPT ID:</strong> ${optId}
            </div>
            ` : ''}
            
            <p>–í–∞—à –∫–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è:</p>
            
            <div class="code-box">
              <div class="code">${resetCode}</div>
              <p style="margin: 10px 0 0 0; font-size: 14px; color: #6b7280;">
                –í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
              </p>
            </div>
            
            <div class="warning">
              <strong>‚ö†Ô∏è –í–∞–∂–Ω–æ:</strong>
              <ul>
                <li>–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç</li>
                <li>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ</li>
                <li>–ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥</li>
                <li>–ö–æ–¥ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑</li>
              </ul>
            </div>
            
            <p>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É <a href="https://partsbay.ae/forgot-password">—Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è</a> –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –≤—ã—à–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è.</p>
          </div>
          
          <div class="footer">
            <p><strong>PartsBay.ae</strong></p>
            <p>–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ –∏–∑ –û–ê–≠ —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É</p>
            <p style="font-size: 12px; color: #6b7280;">
              –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ —Å–∞–π—Ç –∏–ª–∏ Telegram.
            </p>
          </div>
        </body>
      </html>
    `;

    const emailResponse = await resend.emails.send({
      from: "PartsBay.ae <noreply@partsbay.ae>",
      to: [email],
      subject: subject,
      html: htmlContent,
    });

    console.log("Email sent successfully:", emailResponse);

    return new Response(
      JSON.stringify({ 
        success: true, 
        message: "–ö–æ–¥ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ email",
        emailId: emailResponse.data?.id 
      }), 
      {
        status: 200,
        headers: {
          "Content-Type": "application/json",
          ...corsHeaders,
        },
      }
    );
  } catch (error: any) {
    console.error("Error in send-password-reset function:", error);
    
    // Determine error type for better user feedback
    let errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥";
    let statusCode = 500;
    
    if (error.message?.includes("Invalid")) {
      errorMessage = "–ù–µ–≤–µ—Ä–Ω—ã–π email –∞–¥—Ä–µ—Å";
      statusCode = 400;
    } else if (error.message?.includes("rate limit")) {
      errorMessage = "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
      statusCode = 429;
    } else if (error.message?.includes("domain")) {
      errorMessage = "Email –¥–æ–º–µ–Ω –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω";
      statusCode = 422;
    }
    
    return new Response(
      JSON.stringify({ 
        success: false,
        message: errorMessage,
        details: error.message 
      }),
      {
        status: statusCode,
        headers: { 
          "Content-Type": "application/json", 
          ...corsHeaders 
        },
      }
    );
  }
};

serve(handler);
