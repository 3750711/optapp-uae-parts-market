
import React, { Suspense, useEffect } from "react";
import { Toaster } from "@/components/ui/sonner";
import { TooltipProvider } from "@/components/ui/tooltip";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter } from "react-router-dom";
import { HelmetProvider } from "react-helmet-async";
import { AuthProvider } from '@/contexts/AuthContext';
import { RealtimeProvider } from '@/contexts/RealtimeProvider.noop';
import LanguageProvider from '@/components/layout/LanguageProvider';

import { ThemeProvider } from "next-themes";
import AppRoutes from "@/routes";
import { GlobalErrorBoundary } from "@/components/error/GlobalErrorBoundary";
import { performanceMonitor } from "@/utils/performanceMonitor";
import { PWAIndicators } from "@/components/PWAIndicators";
import { useBackgroundSync } from "@/hooks/useBackgroundSync";
import { PBLogoLoader } from "@/components/ui/PBLogoLoader";
import { RouteChangeOverlay } from "@/components/routing/RouteChangeOverlay";
import { UpdatePrompt } from "@/components/UpdatePrompt";
// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è QueryClient –¥–ª—è production
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: (failureCount, error) => {
        // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
        if (error?.message?.includes('JWT') || error?.message?.includes('auth')) {
          return false;
        }
        return failureCount < 1; // –£–º–µ–Ω—å—à–µ–Ω–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ fallback –≤ –æ—Ñ–ª–∞–π–Ω
      },
      staleTime: 5 * 60 * 1000, // –£–º–µ–Ω—å—à–µ–Ω–æ –¥–æ 5 –º–∏–Ω—É—Ç –¥–ª—è –±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
      gcTime: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç –≤ –ø–∞–º—è—Ç–∏
      refetchOnWindowFocus: false, // –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      refetchOnReconnect: false, // –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
      refetchOnMount: true, // –í–∫–ª—é—á–µ–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
    },
    mutations: {
      retry: false, // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –º—É—Ç–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    }
  },
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è lazy-loaded –º–∞—Ä—à—Ä—É—Ç–æ–≤
const RouteLoader = React.memo(() => (
  <PBLogoLoader />
));

const App = () => {
  // üîß –£–ü–†–û–©–ï–ù–û: –£–±—Ä–∞–Ω—ã –≤—Å–µ —Å–ª–æ–∂–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è Safe Baseline

  return (
    <GlobalErrorBoundary showDetails={import.meta.env.DEV}>
      <HelmetProvider>
        <ThemeProvider attribute="class" defaultTheme="light" enableSystem={false}>
          <AuthProvider>
            <RealtimeProvider>
              <BrowserRouter>
                <LanguageProvider>
                  <TooltipProvider>
                    <Toaster />
                    <Suspense fallback={<RouteLoader />}>
                      <AppRoutes />
                    </Suspense>
                  </TooltipProvider>
                </LanguageProvider>
              </BrowserRouter>
            </RealtimeProvider>
          </AuthProvider>
        </ThemeProvider>
      </HelmetProvider>
    </GlobalErrorBoundary>
  );
};

export default App;
