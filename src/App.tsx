
import React, { Suspense, useEffect } from "react";
import { Toaster } from "@/components/ui/sonner";
import { TooltipProvider } from "@/components/ui/tooltip";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { BrowserRouter } from "react-router-dom";
import { HelmetProvider } from "react-helmet-async";
import { AuthProvider } from '@/contexts/AuthContext';
import { RealtimeProvider } from '@/contexts/RealtimeProvider.noop';
import LanguageProvider from '@/components/layout/LanguageProvider';

import { ThemeProvider } from "next-themes";
import AppRoutes from "@/routes";
import { GlobalErrorBoundary } from "@/components/error/GlobalErrorBoundary";
import { performanceMonitor } from "@/utils/performanceMonitor";
import { PWAIndicators } from "@/components/PWAIndicators";
import { useBackgroundSync } from "@/hooks/useBackgroundSync";
import { PBLogoLoader } from "@/components/ui/PBLogoLoader";
import { RouteChangeOverlay } from "@/components/routing/RouteChangeOverlay";
import { UpdatePrompt } from "@/components/UpdatePrompt";
// –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è QueryClient –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      retry: (failureCount, error) => {
        // –¢–æ–ª—å–∫–æ 1 –ø–æ–ø—ã—Ç–∫–∞, —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
        const isNetworkError = error?.name === 'NetworkError' || 
                              error?.message?.includes('fetch') ||
                              error?.message?.includes('network');
        return isNetworkError && failureCount < 1;
      },
      staleTime: 10 * 60 * 1000, // 10 –º–∏–Ω—É—Ç - –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ
      gcTime: 60 * 60 * 1000, // 1 —á–∞—Å –≤ –ø–∞–º—è—Ç–∏
      refetchOnWindowFocus: false, 
      refetchOnReconnect: false, 
      refetchOnMount: false, // –û—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è –º–∏–Ω–∏–º—É–º–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
      networkMode: 'online', // –¢–æ–ª—å–∫–æ –æ–Ω–ª–∞–π–Ω —Ä–µ–∂–∏–º
    },
    mutations: {
      retry: false,
      networkMode: 'online',
    }
  },
});

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è lazy-loaded –º–∞—Ä—à—Ä—É—Ç–æ–≤
const RouteLoader = React.memo(() => (
  <PBLogoLoader />
));

const App = () => {
  // üîß –£–ü–†–û–©–ï–ù–û: –£–±—Ä–∞–Ω—ã –≤—Å–µ —Å–ª–æ–∂–Ω—ã–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è Safe Baseline

  return (
    <GlobalErrorBoundary showDetails={import.meta.env.DEV}>
      <HelmetProvider>
        <ThemeProvider attribute="class" defaultTheme="light" enableSystem={false}>
          <AuthProvider>
            <RealtimeProvider>
              <BrowserRouter>
                <LanguageProvider>
                  <TooltipProvider>
                    <Toaster />
                    <Suspense fallback={<RouteLoader />}>
                      <AppRoutes />
                    </Suspense>
                  </TooltipProvider>
                </LanguageProvider>
              </BrowserRouter>
            </RealtimeProvider>
          </AuthProvider>
        </ThemeProvider>
      </HelmetProvider>
    </GlobalErrorBoundary>
  );
};

export default App;
