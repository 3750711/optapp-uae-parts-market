import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { useToast } from "@/hooks/use-toast";
import { supabase } from "@/integrations/supabase/client";
import { AdminProductFormValues } from "@/schemas/adminProductSchema";
import { extractPublicIdFromUrl } from "@/utils/cloudinaryUtils";
import { useAdminNotifications } from "@/hooks/useAdminNotifications";
import { useTelegramNotification } from "@/hooks/useTelegramNotification";
import { useAISearch } from "@/hooks/useAISearch";

interface CreateProductParams {
  values: AdminProductFormValues;
  imageUrls: string[];
  videoUrls: string[];
  primaryImage?: string;
  sellers: Array<{ id: string; full_name: string; opt_id?: string }>;
  brands: Array<{ id: string; name: string }>;
  brandModels: Array<{ id: string; name: string; brand_id: string }>;
}

export const useAdminProductCreation = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [isCreating, setIsCreating] = useState(false);
  const { notifyAdminsNewProduct } = useAdminNotifications();
  const { sendProductNotification } = useTelegramNotification();
  const { generateEmbeddingForProduct } = useAISearch();

  const createProductWithTransaction = async ({
    values,
    imageUrls,
    videoUrls,
    primaryImage,
    sellers,
    brands,
    brandModels
  }: CreateProductParams) => {
    if (isCreating) {
      console.warn("Product creation already in progress");
      return;
    }

    setIsCreating(true);
    let productId: string | null = null;
    
    console.log("üöÄ Starting admin product creation transaction:", {
      title: values.title,
      sellerId: values.sellerId,
      imageCount: imageUrls.length,
      videoCount: videoUrls.length,
    });

    try {
      if (imageUrls.length === 0) {
        throw new Error("–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é");
      }

      const selectedBrand = brands.find(brand => brand.id === values.brandId);
      const selectedSeller = sellers.find(seller => seller.id === values.sellerId);
      
      if (!selectedBrand) throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –º–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è");
      if (!selectedSeller) throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü");

      let modelName = null;
      if (values.modelId) {
        const selectedModel = brandModels.find(model => model.id === values.modelId);
        modelName = selectedModel?.name || null;
      }

      // --- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è ---

      // 1. –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä —á–µ—Ä–µ–∑ admin RPC —Ñ—É–Ω–∫—Ü–∏—é
      const { data: createdProductId, error: productError } = await supabase.rpc('admin_create_product', {
        p_title: values.title,
        p_price: Number(values.price),
        p_condition: "–ù–æ–≤—ã–π",
        p_brand: selectedBrand.name,
        p_model: modelName,
        p_description: values.description || null,
        p_seller_id: values.sellerId,
        p_seller_name: selectedSeller.full_name,
        p_status: 'pending', // –ë—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 'active' —Ç—Ä–∏–≥–≥–µ—Ä–æ–º –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        p_place_number: Number(values.placeNumber) || 1,
        p_delivery_price: Number(values.deliveryPrice) || 0,
      });

      if (productError) {
        throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ${productError.message}`);
      }
      productId = createdProductId;
      console.log("‚úÖ Product created successfully with admin RPC:", productId);

      // –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã
      const { data: product, error: fetchError } = await supabase
        .from('products')
        .select()
        .eq('id', productId)
        .single();

      if (fetchError) {
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞: ${fetchError.message}`);
      }

      // 2. –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ admin RPC —Ñ—É–Ω–∫—Ü–∏—é
      for (const url of imageUrls) {
        const { error: imageError } = await supabase.rpc('admin_insert_product_image', {
          p_product_id: productId,
          p_url: url,
          p_is_primary: url === primaryImage
        });
        if (imageError) {
          throw new Error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imageError.message}`);
        }
      }
      console.log(`‚úÖ ${imageUrls.length} images inserted for product ${productId}`);

      // 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞
      try {
        await sendProductNotification(productId, 'product_published');
        console.log(`‚úÖ Telegram notification sent for published product ${productId}`);
      } catch (telegramError) {
        console.error("‚ö†Ô∏è Telegram notification failed (non-critical):", telegramError);
      }

      // 4. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä —Å Cloudinary –¥–∞–Ω–Ω—ã–º–∏ (–Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–æ, –±–µ–∑ –æ—Ç–∫–∞—Ç–∞)
      if (primaryImage) {
        try {
          const publicId = extractPublicIdFromUrl(primaryImage);
          if (publicId) {
            await supabase.from('products').update({
                cloudinary_public_id: publicId,
                cloudinary_url: primaryImage
            }).eq('id', product.id);
          }
        } catch (cloudinaryError) {
          console.error("‚ö†Ô∏è Cloudinary processing error (non-critical):", cloudinaryError);
        }
      }

      // 5. –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ admin RPC —Ñ—É–Ω–∫—Ü–∏—é
      if (videoUrls.length > 0) {
        for (const videoUrl of videoUrls) {
          const { error: videoError } = await supabase.rpc('admin_insert_product_video', {
            p_product_id: productId,
            p_url: videoUrl
          });
          if (videoError) {
            throw new Error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ: ${videoError.message}`);
          }
        }
        console.log(`‚úÖ ${videoUrls.length} videos inserted for product ${productId}`);
      }

      // 6. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º embedding –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ (–Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–æ)
      try {
        console.log(`üîç Generating embedding for new product ${productId}`);
        const embeddingResult = await generateEmbeddingForProduct(productId);
        if (embeddingResult.success) {
          console.log(`‚úÖ Embedding generated successfully for product ${productId}`);
        } else {
          console.warn(`‚ö†Ô∏è Embedding generation failed for product ${productId}:`, embeddingResult.error);
        }
      } catch (embeddingError) {
        console.error("‚ö†Ô∏è Embedding generation failed (non-critical):", embeddingError);
      }

      // 7. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –æ –Ω–æ–≤–æ–º —Ç–æ–≤–∞—Ä–µ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é
      try {
        await notifyAdminsNewProduct(product.id);
      } catch (adminNotificationError) {
        console.error("‚ö†Ô∏è Admin notification failed (non-critical):", adminNotificationError);
      }

      toast({
        title: "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
        description: `–¢–æ–≤–∞—Ä –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–∞ ${selectedSeller.full_name} –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.`,
      });

      console.log("‚úÖ Product creation transaction completed successfully:", { productId });
      return product;

    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞";
      console.error("üí• Critical error in product creation transaction:", error);

      // --- –õ–æ–≥–∏–∫–∞ –æ—Ç–∫–∞—Ç–∞ ---
      if (productId) {
        console.log(`üîÑ Rolling back transaction for product ID: ${productId}`);
        // –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ storage
        await supabase.from('products').delete().eq('id', productId);
        console.log(`‚úÖ Rollback complete. Product ${productId} deleted.`);
        toast({
          title: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
          description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä, –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã.",
          variant: "destructive",
        });
      }
      
      toast({
        title: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞",
        description: errorMessage,
        variant: "destructive",
      });
      
      throw error; // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ UI
    } finally {
      setIsCreating(false);
    }
  };

  return {
    createProductWithTransaction,
    isCreating
  };
};
