import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { supabase } from "@/integrations/supabase/client";
import { useAuth } from "@/contexts/AuthContext";
import { useToast } from "@/hooks/use-toast";
import { Button } from "@/components/ui/button";
import OptimizedMediaSection from "@/components/product/form/OptimizedMediaSection";

const SellerAddProduct = () => {
  const navigate = useNavigate();
  const { user, profile } = useAuth();
  const { toast } = useToast();
  
  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
  const [formData, setFormData] = useState({
    title: "",
    price: "",
    description: ""
  });
  const [isSubmitting, setIsSubmitting] = useState(false);

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const updateForm = (field: keyof typeof formData, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–ù–ï –ú–ï–ù–Ø–ï–ú)
  const [imageUrls, setImageUrls] = useState<string[]>([]);
  const [primaryImage, setPrimaryImage] = useState("");
  const [isMediaUploading, setIsMediaUploading] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å)
  const handleImageUpload = (urls: string[]) => {
    console.log("üì∑ New images uploaded:", urls);
    setImageUrls(prevUrls => [...prevUrls, ...urls]);
    
    if (!primaryImage && urls.length > 0) {
      setPrimaryImage(urls[0]);
    }
  };

  const handleImageDelete = (url: string) => {
    console.log("üóëÔ∏è Deleting image:", url);
    const newImageUrls = imageUrls.filter(item => item !== url);
    setImageUrls(newImageUrls);
    
    if (primaryImage === url) {
      if (newImageUrls.length > 0) {
        setPrimaryImage(newImageUrls[0]);
      } else {
        setPrimaryImage("");
      }
    }
  };

  const handleUploadStateChange = (uploading: boolean) => {
    setIsMediaUploading(uploading);
  };

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    // –ë—ã—Å—Ç—Ä–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.title.trim()) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        variant: "destructive",
      });
      return;
    }

    if (!formData.price || Number(formData.price) <= 0) {
      toast({
        title: "–û—à–∏–±–∫–∞", 
        description: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É",
        variant: "destructive",
      });
      return;
    }

    if (imageUrls.length === 0) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Ñ–æ—Ç–æ",
        variant: "destructive",
      });
      return;
    }

    if (!user?.id) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω",
        variant: "destructive",
      });
      return;
    }

    setIsSubmitting(true);

    try {
      console.log('üöÄ Creating product with RPC...', {
        title: formData.title,
        sellerId: user.id,
        imageCount: imageUrls.length,
        primaryImage
      });

      // –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä –∞—Ç–æ–º–∞—Ä–Ω–æ —á–µ—Ä–µ–∑ RPC —Ñ—É–Ω–∫—Ü–∏—é
      const { data: productId, error: productError } = await supabase
        .rpc('create_product_with_images', {
          p_title: formData.title.trim(),
          p_price: Number(formData.price),
          p_description: formData.description.trim() || null
        });

      if (productError) {
        console.error("‚ùå Error creating product:", productError);
        throw productError;
      }

      console.log('‚úÖ Product created:', productId);

      // –ú–∞—Å—Å–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      const imageInserts = imageUrls.map(url => ({
        product_id: productId,
        url: url,
        is_primary: url === primaryImage
      }));
      
      const { error: imageError } = await supabase
        .from('product_images')
        .insert(imageInserts);
        
      if (imageError) {
        console.error('‚ùå Error adding images:', imageError);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${imageError.message}`);
      }
      
      console.log(`‚úÖ ${imageUrls.length} images added for product ${productId}`);

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –¥–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
      if (profile?.is_trusted_seller) {
        try {
          await supabase.functions.invoke('send-telegram-notification', {
            body: { productId }
          });
          console.log('‚úÖ Notification sent');
        } catch (notificationError) {
          console.error('‚ö†Ô∏è Notification failed:', notificationError);
        }
      }

      const successMessage = profile?.is_trusted_seller 
        ? "–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω"
        : "–¢–æ–≤–∞—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é –∏ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏";

      toast({
        title: "–¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω",
        description: successMessage,
      });

      navigate(`/seller/product/${productId}`);
      
    } catch (error) {
      console.error("üí• Error creating product:", error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
        variant: "destructive",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="max-w-lg mx-auto p-4">
      <div className="mb-4">
        <Button 
          variant="outline" 
          onClick={() => navigate('/seller/dashboard')}
          className="mb-4"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏
        </Button>
        <h1 className="text-2xl font-bold">–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä</h1>
      </div>
      
      <form onSubmit={handleSubmit} className="space-y-4">
        {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
        <OptimizedMediaSection
          imageUrls={imageUrls}
          handleMobileOptimizedImageUpload={handleImageUpload}
          primaryImage={primaryImage}
          onSetPrimaryImage={setPrimaryImage}
          onImageDelete={handleImageDelete}
          disabled={isSubmitting}
          onUploadStateChange={handleUploadStateChange}
        />
        
        {/* –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
        <div>
          <label className="block text-sm font-medium mb-1">
            –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ *
          </label>
          <input
            type="text"
            value={formData.title}
            onChange={(e) => updateForm('title', e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"
            className="w-full p-3 border border-input rounded-lg bg-background"
            required
            minLength={3}
            disabled={isSubmitting}
          />
        </div>
        
        {/* –¶–µ–Ω–∞ */}
        <div>
          <label className="block text-sm font-medium mb-1">
            –¶–µ–Ω–∞ *
          </label>
          <input
            type="number"
            value={formData.price}
            onChange={(e) => updateForm('price', e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É"
            className="w-full p-3 border border-input rounded-lg bg-background"
            required
            min={1}
            step="0.01"
            disabled={isSubmitting}
          />
        </div>
        
        {/* –û–ø–∏—Å–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) */}
        <div>
          <label className="block text-sm font-medium mb-1">
            –û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </label>
          <textarea
            value={formData.description}
            onChange={(e) => updateForm('description', e.target.value)}
            placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
            className="w-full p-3 border border-input rounded-lg bg-background h-24 resize-none"
            disabled={isSubmitting}
          />
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
        <Button
          type="submit"
          disabled={isSubmitting || isMediaUploading}
          className="w-full"
          size="lg"
        >
          {isSubmitting ? "–ü—É–±–ª–∏–∫–∞—Ü–∏—è..." : "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä"}
        </Button>
      </form>
    </div>
  );
};

export default SellerAddProduct;