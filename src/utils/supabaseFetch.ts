export const supabaseFetch = async (url: RequestInfo | URL, options?: RequestInit): Promise<Response> => {
  // –î–ª—è Supabase –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ–º cache: 'no-store'
  // –ü–æ–∑–≤–æ–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä—É –∫–µ—à–∏—Ä–æ–≤–∞—Ç—å CORS preflight –∑–∞–ø—Ä–æ—Å—ã
  const fetchOptions = {
    ...options,
    // –£–±–∏—Ä–∞–µ–º cache: 'no-store' –¥–ª—è Supabase
    credentials: 'same-origin' as const,
  };

  try {
    return await fetch(url, fetchOptions);
  } catch (error) {
    // –ü—Ä–∏ 502 –æ—à–∏–±–∫–µ –ø—Ä–æ–∫—Å–∏ - fallback –Ω–∞ –ø—Ä—è–º–æ–π URL
    const urlString = url.toString();
    if (urlString.includes('api.partsbay.ae')) {
      const directUrl = urlString.replace('api.partsbay.ae', 'vfiylfljiixqkjfqubyq.supabase.co');
      console.log('üîÑ Proxy failed, falling back to direct Supabase URL:', directUrl);
      return await fetch(directUrl, fetchOptions);
    }
    throw error;
  }
};