import { decodeJwt } from '@/auth/jwtHelpers';

export interface ValidationResult {
  isValid: boolean;
  errors: string[];
  warnings: string[];
  details?: {
    source: 'runtime-config' | 'env' | 'fallback';
    keyPreview: string;
    expiry?: Date;
    issuer?: string;
    ref?: string;
    role?: string;
  };
}

export interface SupabaseKeyPayload {
  iss?: string;
  ref?: string;
  role?: string;
  iat?: number;
  exp?: number;
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è JWT —Ç–æ–∫–µ–Ω–∞ Supabase Anon Key
 */
export function validateSupabaseAnonKey(key: string | undefined | null): ValidationResult {
  const result: ValidationResult = {
    isValid: false,
    errors: [],
    warnings: [],
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  if (!key || key.trim() === '') {
    result.errors.push('Supabase Anon Key –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    return result;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ placeholder –∑–Ω–∞—á–µ–Ω–∏—è
  if (key.includes('...') || key === 'your_supabase_anon_key_here') {
    result.errors.push('Supabase Anon Key —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder –∑–Ω–∞—á–µ–Ω–∏–µ');
    return result;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ JWT (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 3 —á–∞—Å—Ç–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–æ—á–∫–∞–º–∏)
  const parts = key.split('.');
  if (parts.length !== 3) {
    result.errors.push(`–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JWT —Ç–æ–∫–µ–Ω–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è 3 —á–∞—Å—Ç–∏, –ø–æ–ª—É—á–µ–Ω–æ: ${parts.length}`);
    return result;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å–µ —á–∞—Å—Ç–∏ –Ω–µ –ø—É—Å—Ç—ã–µ
  if (parts.some(part => !part || part.trim() === '')) {
    result.errors.push('JWT —Ç–æ–∫–µ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Å—Ç—ã–µ —á–∞—Å—Ç–∏');
    return result;
  }

  // –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ payload
  const payload = decodeJwt<SupabaseKeyPayload>(key);
  if (!payload) {
    result.errors.push('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å payload JWT —Ç–æ–∫–µ–Ω–∞');
    return result;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
  if (!payload.iss || payload.iss !== 'supabase') {
    result.errors.push(`–ù–µ–≤–µ—Ä–Ω—ã–π issuer. –û–∂–∏–¥–∞–µ—Ç—Å—è "supabase", –ø–æ–ª—É—á–µ–Ω–æ: "${payload.iss}"`);
  }

  if (!payload.ref) {
    result.errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç project ref –≤ JWT payload');
  }

  if (!payload.role || payload.role !== 'anon') {
    result.errors.push(`–ù–µ–≤–µ—Ä–Ω–∞—è —Ä–æ–ª—å. –û–∂–∏–¥–∞–µ—Ç—Å—è "anon", –ø–æ–ª—É—á–µ–Ω–æ: "${payload.role}"`);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
  if (payload.exp) {
    const expiry = new Date(payload.exp * 1000);
    const now = new Date();
    
    if (expiry <= now) {
      result.errors.push(`JWT —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫: ${expiry.toISOString()}`);
    } else {
      // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π
      const daysUntilExpiry = Math.floor((expiry.getTime() - now.getTime()) / (1000 * 60 * 60 * 24));
      if (daysUntilExpiry <= 30) {
        result.warnings.push(`JWT —Ç–æ–∫–µ–Ω –∏—Å—Ç–µ—á–µ—Ç —á–µ—Ä–µ–∑ ${daysUntilExpiry} –¥–Ω–µ–π (${expiry.toISOString()})`);
      }
    }
    
    result.details = {
      ...result.details,
      expiry,
    };
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –∫–ª—é—á–∞ (–ø–µ—Ä–≤—ã–µ 20 –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–∏–º–≤–æ–ª–æ–≤)
  const keyPreview = key.length > 30 
    ? `${key.substring(0, 20)}...${key.substring(key.length - 10)}`
    : key.substring(0, 20) + '...';

  result.details = {
    source: 'runtime-config', // –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –º–µ—Å—Ç–µ –≤—ã–∑–æ–≤–∞
    keyPreview,
    issuer: payload.iss,
    ref: payload.ref,
    role: payload.role,
    ...result.details,
  };

  // –ï—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–æ–∫, —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω
  result.isValid = result.errors.length === 0;

  return result;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function getConfigSource(key: string | undefined): 'runtime-config' | 'env' | 'fallback' | 'none' {
  const rt = (globalThis as any).__PB_RUNTIME__ || {};
  const envKey = (import.meta as any).env?.VITE_SUPABASE_ANON_KEY;
  
  if (rt.SUPABASE_ANON_KEY && rt.SUPABASE_ANON_KEY === key) {
    return 'runtime-config';
  }
  
  if (envKey && envKey === key) {
    return 'env';
  }
  
  if (!key) {
    return 'none';
  }
  
  return 'fallback';
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export function createErrorReport(validation: ValidationResult): string {
  let report = 'üö® –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Supabase Anon Key:\n\n';
  
  validation.errors.forEach((error, index) => {
    report += `${index + 1}. ${error}\n`;
  });
  
  if (validation.warnings.length > 0) {
    report += '\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:\n';
    validation.warnings.forEach((warning, index) => {
      report += `${index + 1}. ${warning}\n`;
    });
  }
  
  report += '\nüí° –ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:\n';
  report += '1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª public/runtime-config.js\n';
  report += '2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ SUPABASE_ANON_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–π JWT —Ç–æ–∫–µ–Ω\n';
  report += '3. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π anon key –≤ Supabase Dashboard -> Settings -> API\n';
  report += '4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Ç–æ–∫–µ–Ω –Ω–µ –∏—Å—Ç–µ–∫\n';
  
  if (validation.details) {
    report += '\nüìä –î–µ—Ç–∞–ª–∏:\n';
    report += `- –ò—Å—Ç–æ—á–Ω–∏–∫: ${validation.details.source}\n`;
    report += `- –ü—Ä–µ–≤—å—é –∫–ª—é—á–∞: ${validation.details.keyPreview}\n`;
    if (validation.details.ref) {
      report += `- Project ref: ${validation.details.ref}\n`;
    }
    if (validation.details.expiry) {
      report += `- –ò—Å—Ç–µ–∫–∞–µ—Ç: ${validation.details.expiry.toISOString()}\n`;
    }
  }
  
  return report;
}