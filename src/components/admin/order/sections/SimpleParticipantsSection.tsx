
import React from "react";
import { Label } from "@/components/ui/label";
import OptimizedSelect from "@/components/ui/OptimizedSelect";
import { BuyerProfile, SellerProfile } from "@/types/order";

interface SimpleParticipantsSectionProps {
  buyerOptId: string;
  sellerId: string;
  onBuyerOptIdChange: (value: string) => void;
  onSellerIdChange: (value: string) => void;
  buyerProfiles: BuyerProfile[];
  sellerProfiles: SellerProfile[];
  disabled?: boolean;
  hideSeller?: boolean;
}

// –§—É–Ω–∫—Ü–∏—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ OPT_ID –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
const normalizeOptId = (optId: string): string => {
  return optId.trim().toUpperCase().replace(/\s+/g, '');
};

export const SimpleParticipantsSection: React.FC<SimpleParticipantsSectionProps> = ({
  buyerOptId,
  sellerId,
  onBuyerOptIdChange,
  onSellerIdChange,
  buyerProfiles,
  sellerProfiles,
  disabled = false,
  hideSeller = false,
}) => {
  // Prepare buyer options for OptimizedSelect
  const buyerOptions = React.useMemo(() => {
    return buyerProfiles
      .filter(buyer => buyer.opt_id && buyer.opt_id.trim()) // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π —Å –ø—É—Å—Ç—ã–º–∏ OPT_ID
      .sort((a, b) => {
        const aOptId = normalizeOptId(a.opt_id || '');
        const bOptId = normalizeOptId(b.opt_id || '');
        return aOptId.localeCompare(bOptId);
      })
      .map(buyer => ({
        value: buyer.opt_id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π opt_id –∫–∞–∫ value
        label: `${buyer.full_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (${buyer.opt_id})`,
        searchText: `${buyer.full_name || ''} ${buyer.opt_id} ${normalizeOptId(buyer.opt_id || '')}`
      }));
  }, [buyerProfiles]);

  // Prepare seller options for OptimizedSelect
  const sellerOptions = React.useMemo(() => {
    return sellerProfiles
      .filter(seller => seller.id) // –£–±–µ–¥–∏–º—Å—è —á—Ç–æ —É –ø—Ä–æ–¥–∞–≤—Ü–∞ –µ—Å—Ç—å ID
      .sort((a, b) => {
        const aOptId = a.opt_id || '';
        const bOptId = b.opt_id || '';
        return aOptId.localeCompare(bOptId);
      })
      .map(seller => ({
        value: seller.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∫–∞–∫ value –¥–ª—è –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
        label: seller.opt_id ? `${seller.full_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (${seller.opt_id})` : (seller.full_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'),
        searchText: `${seller.full_name || ''} ${seller.opt_id || ''}`
      }));
  }, [sellerProfiles]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
  const selectedBuyerExists = React.useMemo(() => {
    if (!buyerOptId) return true; // –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ø—É—Å—Ç–∏–º–æ
    
    // –ò—â–µ–º –∫–∞–∫ –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é, —Ç–∞–∫ –∏ –ø–æ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–º—É
    const normalizedSelected = normalizeOptId(buyerOptId);
    return buyerOptions.some(option => {
      const normalizedOption = normalizeOptId(option.value);
      return option.value === buyerOptId || normalizedOption === normalizedSelected;
    });
  }, [buyerOptId, buyerOptions]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
  const selectedSellerExists = React.useMemo(() => {
    if (!sellerId) return true; // –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ø—É—Å—Ç–∏–º–æ
    return sellerOptions.some(option => option.value === sellerId);
  }, [sellerId, sellerOptions]);

  // –ù–∞–π–¥–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
  const selectedBuyer = React.useMemo(() => {
    if (!buyerOptId) return null;
    const normalizedSelected = normalizeOptId(buyerOptId);
    return buyerProfiles.find(buyer => {
      const normalizedBuyer = normalizeOptId(buyer.opt_id || '');
      return buyer.opt_id === buyerOptId || normalizedBuyer === normalizedSelected;
    });
  }, [buyerOptId, buyerProfiles]);

  return (
    <div className="space-y-4">
      <h3 className="text-lg font-semibold">–£—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–∞–∫–∞–∑–∞</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <Label htmlFor="buyerOptId">OPT_ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è *</Label>
          <OptimizedSelect
            options={buyerOptions}
            value={buyerOptId}
            onValueChange={onBuyerOptIdChange}
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è..."
            searchPlaceholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ OPT_ID..."
            disabled={disabled}
          />
          {!selectedBuyerExists && buyerOptId && (
            <p className="text-sm text-red-600 mt-1">
              –ü–æ–∫—É–ø–∞—Ç–µ–ª—å —Å OPT_ID "{buyerOptId}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.
            </p>
          )}
          {selectedBuyer && (
            <div className="text-sm text-gray-600 mt-1">
              <p>‚úÖ –ù–∞–π–¥–µ–Ω: {selectedBuyer.full_name}</p>
              {selectedBuyer.telegram && (
                <p>üì± Telegram: {selectedBuyer.telegram}</p>
              )}
            </div>
          )}
          {buyerOptions.length === 0 && (
            <p className="text-sm text-gray-500 mt-1">
              –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π —Å OPT_ID
            </p>
          )}
          <p className="text-xs text-gray-500 mt-1">
            –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π: {buyerOptions.length}
          </p>
        </div>

        {!hideSeller && (
          <div>
            <Label htmlFor="sellerId">–ü—Ä–æ–¥–∞–≤–µ—Ü *</Label>
            <OptimizedSelect
              options={sellerOptions}
              value={sellerId}
              onValueChange={onSellerIdChange}
              placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–∞..."
              searchPlaceholder="–ü–æ–∏—Å–∫ –ø—Ä–æ–¥–∞–≤—Ü–∞..."
              disabled={disabled}
            />
            {!selectedSellerExists && sellerId && (
              <p className="text-sm text-red-600 mt-1">
                –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ
              </p>
            )}
            {sellerOptions.length === 0 && (
              <p className="text-sm text-gray-500 mt-1">
                –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
              </p>
            )}
            <p className="text-xs text-gray-500 mt-1">
              –î–æ—Å—Ç—É–ø–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤: {sellerOptions.length}
            </p>
          </div>
        )}
      </div>
    </div>
  );
};
