
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.tsx";
import "./index.css";
import { Toaster } from "@/components/ui/toaster";
import { perfMark, perfMeasure, initPerformanceOptimizations } from "@/utils/performanceUtils";

// –ú–∞—Ä–∫–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
perfMark('app-init-start');

// –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—à–∏–±–æ–∫ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
const initErrorMonitoring = async () => {
  if (process.env.NODE_ENV === 'production') {
    try {
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ
      const { errorMonitor } = await import("@/utils/errorMonitoring");
      console.log('üîç Error monitoring initialized');
      return errorMonitor;
    } catch (error) {
      console.warn('Failed to initialize error monitoring:', error);
    }
  }
};

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
const initApp = () => {
  perfMark('dom-setup-start');
  
  const rootElement = document.getElementById("root");
  
  if (!rootElement) {
    throw new Error("Root element not found");
  }

  // –°–æ–∑–¥–∞–µ–º root —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  const root = createRoot(rootElement);
  
  perfMark('dom-setup-end');
  perfMark('react-render-start');
  
  // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  root.render(
    <StrictMode>
      <App />
      <Toaster />
    </StrictMode>
  );

  perfMark('react-render-end');
  
  // –ò–∑–º–µ—Ä—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  perfMeasure('DOM Setup', 'dom-setup-start', 'dom-setup-end');
  perfMeasure('React Render', 'react-render-start', 'react-render-end');
  perfMeasure('Total App Init', 'app-init-start', 'react-render-end');

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  initPerformanceOptimizations();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞ (–Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–µ)
  if (process.env.NODE_ENV === 'production') {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º requestIdleCallback –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏–Ω–∞—á–µ setTimeout
    const scheduleInit = (window as any).requestIdleCallback || ((cb: () => void) => setTimeout(cb, 16));
    scheduleInit(() => {
      initErrorMonitoring();
    });
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
initApp();
