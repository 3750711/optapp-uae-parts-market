import React from "react";
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";

// –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º React –≤–µ—Ä—Å–∏–∏ –∏ dispatcher
console.log("üîç [React main]", React.version, "URL:", import.meta.url);
console.log("üîç React export keys:", Object.keys(React));
console.log("üîç React internals check:", {
  hasInternals: !!(React as any)?.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  hasDispatcher: !!(React as any)?.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentDispatcher,
  currentDispatcher: (React as any)?.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentDispatcher?.current
});

import App from "./App.tsx";
import "./index.css";
import { AuthProvider } from "@/contexts/AuthContext";
import { initPerformanceOptimizations } from "@/utils/performanceUtils";
import { initializeClarity } from "@/utils/clarityTracking";
import { initMobileOptimizations } from "@/utils/mobileOptimizations";
import { registerServiceWorker } from "@/utils/serviceWorkerManager";

// Import PWA optimizations early for better bfcache handling
import "@/utils/pwaOptimizations";

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
import "@/utils/productionErrorReporting";

const initApp = () => {
  console.log("üîç [React main] initApp: Starting app initialization");
  
  const rootElement = document.getElementById("root");
  
  if (!rootElement) {
    throw new Error("Root element not found");
  }

  // –°–æ–∑–¥–∞–µ–º root —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
  const root = createRoot(rootElement);
  
  console.log("üîç [React main] initApp: Root created, rendering app");
  
  // –†–µ–Ω–¥–µ—Ä–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  root.render(
    <StrictMode>
      <AuthProvider>
        <App />
      </AuthProvider>
    </StrictMode>
  );
  
  console.log("üîç [React main] initApp: App rendered successfully");
};

const performProductionChecks = () => {
  if (import.meta.env.PROD) {
    // Production mode - disable console.log for performance
    console.log = () => {};
  }
};

const handleGlobalError = (event: ErrorEvent) => {
  console.error('[GLOBAL]', event.error?.message || 'Unknown error');
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π
  if (event.error?.message?.includes('Loading chunk') || 
      event.error?.message?.includes('dynamically imported module')) {
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–µ—à–µ–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤
    const clearCachesAndReload = async () => {
      try {
        if (typeof window !== 'undefined' && 'caches' in window && window.caches) {
          const names = await window.caches.keys();
          await Promise.all(names.map(name => window.caches.delete(name)));
        }
        } catch (error) {
        // Silently handle cache clearing errors
      } finally {
        // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if (typeof window !== 'undefined' && window.location) {
          window.location.reload();
        }
      }
    };
    
    clearCachesAndReload();
  }
};

const handleUnhandledRejection = (event: PromiseRejectionEvent) => {
  console.error('[PROMISE]', event.reason?.message || 'Unhandled rejection');
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –æ—à–∏–±–æ–∫
  if (event.reason?.message?.includes('ResizeObserver loop limit exceeded')) {
    event.preventDefault();
  }
};

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
if (typeof window !== 'undefined') {
  window.addEventListener('error', handleGlobalError);
  window.addEventListener('unhandledrejection', handleUnhandledRejection);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
try {
  console.log("üîç [React main] Starting application bootstrap");
  
  performProductionChecks();
  
  // Initialize PWA and mobile optimizations first
  initMobileOptimizations();
  
  // Register service worker for PWA functionality - –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–û –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò
  // registerServiceWorker();
  
  initApp();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  initPerformanceOptimizations();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Microsoft Clarity (—Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
  initializeClarity();
  
  console.log("üîç [React main] Application bootstrap completed");
} catch (error) {
  console.error('[INIT]', 'Failed to initialize app', error);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
  if (typeof document !== 'undefined') {
    // –û—á–∏—â–∞–µ–º body –æ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    document.body.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
    const errorContainer = document.createElement('div');
    errorContainer.style.cssText = `
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      font-family: system-ui, -apple-system, sans-serif;
      background-color: #f9fafb;
      color: #374151;
    `;
    
    const contentDiv = document.createElement('div');
    contentDiv.style.cssText = 'text-align: center; max-width: 500px; padding: 2rem;';
    
    const title = document.createElement('h1');
    title.style.cssText = 'font-size: 1.5rem; font-weight: bold; margin-bottom: 1rem;';
    title.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è';
    
    const message = document.createElement('p');
    message.style.cssText = 'margin-bottom: 2rem; color: #6b7280;';
    message.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.';
    
    const reloadButton = document.createElement('button');
    reloadButton.style.cssText = `
      background-color: #3b82f6;
      color: white;
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      font-size: 1rem;
    `;
    reloadButton.textContent = '–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É';
    reloadButton.addEventListener('click', () => window.location.reload());
    
    contentDiv.appendChild(title);
    contentDiv.appendChild(message);
    contentDiv.appendChild(reloadButton);
    errorContainer.appendChild(contentDiv);
    document.body.appendChild(errorContainer);
  }
}
